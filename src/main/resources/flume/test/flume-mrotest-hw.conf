etlAgent.sources = src1
etlAgent.sinks = sink1

# Describe/configure the source
etlAgent.sources.src1.type = com.gsta.bigdata.etl.flume.sources.SpoolDirectoryCompressSource
etlAgent.sources.src1.spoolDir = D://github//noceDataStructure//mrosource//work
etlAgent.sources.src1.batchSize=2000
etlAgent.sources.src1.inputCharset=UTF-8
etlAgent.sources.src1.basenameHeader=true
etlAgent.sources.src1.ignorePattern = ^(.)*\\._COPYING_$
etlAgent.sources.src1.deserializer = com.gsta.bigdata.etl.flume.sources.TarGZGZMROLineDeserializer$Builder
etlAgent.sources.src1.deserializer.inputCharset=utf-8
etlAgent.sources.src1.pollDelay=30000

etlAgent.sources.src1.interceptors = etlInterceptor
etlAgent.sources.src1.interceptors.etlInterceptor.type = com.gsta.bigdata.etl.flume.MROInterceptor$Builder
etlAgent.sources.src1.interceptors.etlInterceptor.configFile=D:\\github\\flumeETL\\src\\main\\resources\\flume\\mro\\flume-etl-mro-hw.xml
etlAgent.sources.src1.interceptors.etlInterceptor.partitionCount=50

# Describe the sink
etlAgent.sinks.sink1.type = file_roll
etlAgent.sinks.sink1.sink.directory = D://github//noceDataStructure//mrosource//result/
etlAgent.sinks.sink1.sink.rollInterval = 0
etlAgent.sinks.sink1.batchSize = 1000

# Use a channel which buffers events in memory
etlAgent.channels = ch1
etlAgent.channels.ch1.type = memory
etlAgent.channels.ch1.capacity = 10000
etlAgent.channels.ch1.transactionCapacity = 10000

# Bind the source and sink to the channel
etlAgent.sources.src1.channels = ch1
etlAgent.sinks.sink1.channel = ch1
